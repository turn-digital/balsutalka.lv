---
import "~styles/styles.scss";
import Layout from "../layouts/Layout.astro";
import Header from "~components/Header/Header.jsx";
import Hero from "~components/Hero/Hero.astro";
import Future from "~components/Future/Future.jsx";
import Graph from "~components/Graph/Graph.jsx";
import Faq from "~components/Faq/Faq.astro";
import Footer from "~components/Footer/Footer.astro";
import ResultsLV from "../components/Results/ResultsLV.jsx";
import Implementers from "~components/Implementers/Implementers.jsx";
import i18next, { t, changeLanguage } from "i18next";

changeLanguage("lv");

const hours = await fetch(t("index.graphDataUrl"))
    .then(response => response.json())
    // item id 4 is the most recent data
    .then(data => {
    return {
        valid: Math.floor(data[4].valid / (60 * 60) * 10) / 10,
        total: Math.floor(data[4].total / (60 * 60) * 10) / 10
    };
})
    // fallback, last known value if we did not get ant data from CommonVoice
    .catch(() => {
    return {
        valid: Number(t("index.graphFallbackValidated")),
        total: Number(t("index.graphFallbackRecorded"))
    };
});
// Cache warm recording section on Common Voice site so users do not get Timeout errors
await fetch(`https://commonvoice.mozilla.org/api/v1/${i18next.language}/sentences?count=25`);
await fetch(`https://commonvoice.mozilla.org/api/v1/${i18next.language}/clips`);
---

<Layout
  title={t("global.metaTitle")}
  desc={t("index.metaDesc")}
  ogImage={t("global.ogImage")}
>
  <main>
    <Header />
    <Future />
    <Hero />
    <Graph hours={hours} />
    <ResultsLV />
    <Faq />
    <Implementers />
    <Footer />
  </main>
</Layout>
